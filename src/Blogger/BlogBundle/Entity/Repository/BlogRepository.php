<?php

namespace Blogger\BlogBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * BlogRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BlogRepository extends EntityRepository
{
    public function getLatestBlogs($limit = null)
    {
        $qb = $this->createQueryBuilder('b')
            ->select('b')
            ->leftJoin('b.comments', 'c')
            ->addOrderBy('b.created', 'DESC');

        if (false === is_null($limit))
            $qb->setMaxResults($limit);

        return $qb->getQuery()
            ->getResult();
    }

    public function getPostsForCategory($categoryId)
    {
        $qb = $this->createQueryBuilder('c')
            ->select('c')
            ->where('c.category = :categoryId')
            ->setParameter('categoryId', $categoryId)
            ->addOrderBy('c.created', 'DESC');

        return $qb->getQuery()
            ->getResult();
    }

    public function getPostsOnTag($tagId)
    {
        $qb = $this->createQueryBuilder('p')
            ->select('p', 't')
            ->leftJoin('p.tags', 't')
            ->where('t.id = :id')
            ->setParameter('id', $tagId)
            ->addOrderBy('p.created', 'DESC');

        return $qb->getQuery()
            ->getResult();
    }

    public function getQuantityOfPostsInCategory($category)
    {

        $qb = $this->createQueryBuilder('p')
            ->select('count(p)')
            ->innerJoin('p.category','c')
            ->where('p.category in (:id)')
            ->setParameter('id', $category);

        return $qb->getQuery()->getSingleScalarResult();
    }
}
